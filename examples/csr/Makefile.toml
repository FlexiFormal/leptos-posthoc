[tasks.wasm-pack]
# env = { "RUSTFLAGS" = "-Ctarget-cpu=mvp -Ctarget-feature=+multivalue,+mutable-globals,+reference-types,+sign-ext" }
install_crate = "wasm-pack"
command = "wasm-pack"
args = ["build", "--target", "no-modules"]

[tasks.update-js]
script_runner = "@rust"
script = '''
use std::{io::Write, path::PathBuf};
fn main() {
    let js_file = PathBuf::from(".").join("pkg").join("csr_example.js");
    let jv = std::fs::read_to_string(&js_file).unwrap();
    std::fs::File::create(js_file).unwrap().write_all(format!(r#"{jv}
const {{ run }} = wasm_bindgen;
async function start() {{
    await wasm_bindgen();
    run()
}}
start();
    "#).as_bytes()).unwrap();
}
'''

[tasks.clean]
command = "cargo"
args = ["clean"]

[tasks.build]
dependencies = ["wasm-pack", "update-js"]
